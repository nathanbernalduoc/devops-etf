trigger:
  branches:
    include:
      - main

variables:
  VM_IP_PUBLICA: '172.200.112.172'
  IMAGE_NAME: 'databaseRegistro'  # Se debe colocar el Nombre de la imagen que será descargada desde ACR
  ACR_NAME: 'databaseRegistro'  # Se debe colocar el Nombre de tu Azure Container Registry (ACR)
  ACR_USERNAME: 'databaseRegistro'  # Se debe colocar el Nombre de usuario del ACR
  ACR_PASSWORD: '5KMLhXEIp9TqMiOoQ4oGwZuYFjuWz4MaPii4yUEKXx+ACRBK3fLq'  # Se debe colocar la Contraseña del ACR

stages:
  - stage: Deploy
    jobs:
      - deployment: DeployVM
        displayName: 'Deploy Base de datos to Máquina virtual'
        environment:
          name: 'vm-environment-etf' 
          resourceType: VirtualMachine 
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    # Verificar e instalar Azure CLI en la máquina virtual
                    if ! command -v az &> /dev/null; then
                      echo "Azure CLI no está instalado. Instalando Azure CLI..."
                      export DEBIAN_FRONTEND=noninteractive
                      sudo apt-get update && \
                      sudo apt-get install -y curl && \
                      curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash && \
                      az --version
                    else
                      echo "Azure CLI ya está instalado."
                    fi
                  displayName: 'Verificar e Instalar Azure CLI'
                  failOnStderr: true

                - script: |
                    # Verificar e instalar Docker en la máquina virtual
                    if ! command -v docker &> /dev/null; then
                      echo "Docker no está instalado. Instalando Docker..."
                      export DEBIAN_FRONTEND=noninteractive
                      sudo apt-get update && \
                      sudo apt-get install -y \
                        apt-transport-https \
                        ca-certificates \
                        curl \
                        gnupg \
                        lsb-release && \
                      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
                      echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && \
                      sudo apt-get update && \
                      sudo apt-get install -y docker-ce docker-ce-cli containerd.io && \
                      sudo systemctl start docker && \
                      sudo systemctl enable docker && \
                      sudo docker --version
                    else
                      echo "Docker ya está instalado."
                    fi
                  displayName: 'Verificar e Instalar Docker'
                  failOnStderr: true

                - script: |
                    # Autenticarse en Azure Container Registry utilizando nombre de usuario y contraseña
                    echo "Autenticándose en Azure Container Registry y ejecutando la imagen Docker..."

                  displayName: 'Descargar y ejecutar la imagen MySQL desde ACR'
                  failOnStderr: true

                - script: |
                    # Mostrar la URL para conectarse a MySQL
                    echo "Conectar a MySQL en la máquina virtual con la IP: ${VM_IP_PUBLICA}, puerto: 3306"
                  displayName: 'Mostrar detalles de conexión a MySQL'
